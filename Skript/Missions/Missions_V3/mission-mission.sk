#                       ______   ______    __          ___      .______       __   __    __  .___  ___. 
#                      /      | /  __  \  |  |        /   \     |   _  \     |  | |  |  |  | |   \/   | 
#                     |  ,----'|  |  |  | |  |       /  ^  \    |  |_)  |    |  | |  |  |  | |  \  /  | 
#                     |  |     |  |  |  | |  |      /  /_\  \   |      /     |  | |  |  |  | |  |\/|  | 
#                     |  `----.|  `--'  | |  `----./  _____  \  |  |\  \----.|  | |  `--'  | |  |  |  | 
#                      \______| \______/  |_______/__/     \__\ | _| `._____||__|  \______/  |__|  |__| 
#           
on break:
	contains(MissionsWhatBreak(player), "%event-block.getType()%") is true
	add 1 to {missions::variables::%player%::break::%(event-block).getType()%}
on death:
	"%attacker.getType()%" = "PLAYER"
	contains(MissionsWhatKillMob(attacker), "%victim.getType()%") is true
	add 1 to {missions::variables::%attacker%::killmob::%victim.getType()%}
on death:
	set {lifetime::%player%} to now
on join:
	set {lifetime::%player%} to now
options:
    timestatistic: PLAY_ONE_TICK
import:
    org.bukkit.Statistic
players property total time:
    return type: integer
    get:
        return round(expression-1.getStatistic(Statistic.{@timestatistic})/20)		
function onlineTime(süre : integer) :: text:
	return "&c%floor({_süre}/86400)% &7g, &c%floor(mod({_süre},86400)/3600)% &7s, &c%floor(mod({_süre},3600)/60)% &7dk, &c%floor(mod({_süre},60))% &7sn"

function MissionsItem(p : player, t: text, m: material=stone) :: material:
	set {_lore::*} to yaml list "missions-info.%{_t}%.lore" of "missions"
	loop MissionsWhatBreak({_p}):
		replace "{%loop-value%}" with "%{missions::variables::%{_p}%::break::%loop-value%} ? 0%" in {_lore::*}
	loop MissionsWhatKillMob({_p}):
		replace "{%loop-value%}" with "%{missions::variables::%{_p}%::killmob::%loop-value%} ? 0%" in {_lore::*}
	replace "{ONLINE}" with onlineTime(round({_p}.getStatistic(Statistic.PLAY_ONE_TICK)/20)) in {_lore::*}
	replace "{MONEY}" with "%balance of {_p}%" in {_lore::*}
	replace "{LIFETIME}" with ReplaceLifeTime({_p}) in {_lore::*}
	replace "{ISLEVEL}" with "%asb level of {_p}%" in {_lore::*}
	loop {_lore::*}:
		set {_newlore::*} to "%{_newlore::*} ? """"%||%loop-value%"
	return {_m} named yaml value "missions-info.%{_t}%.name" of "missions" with lore "%{_newlore::*}%"

function ReplaceLifeTime(p : player) :: text:
	if {lifetime::%{_p}%} is not set:
		return "&8[&6Rütbe&8] &7Oyundan çıkıp girmeniz gerekiyor."
	set {_t} to "%difference between now and {lifetime::%{_p}%}%"
	replace "seconds" with "sn" in {_t}
	replace "second" with "sn" in {_t}
	replace "minutes" with "dk" in {_t}
	replace "minute" with "dk" in {_t}
	replace "hours" with "sa" in {_t}
	replace "hour" with "sa" in {_t}
	replace "and " with "" in {_t}
	return {_t}

function MissionsWhatBreak(p : player) :: texts:
	return yaml nodes with keys "missions-info.%MissionsWhatGroup({_p})%.missions.BREAK-BLOCK" of "missions"

function MissionsWhatKillMob(p : player) :: texts:
	return yaml nodes with keys "missions-info.%MissionsWhatGroup({_p})%.missions.KILL-MOB" of "missions"

function MissionsWhatGroup(p : player) :: text:
	loop yaml nodes with keys "missions-info" of "missions":
		yaml value "missions-info.%loop-value%.nowrank" of "missions" is {_p}'s group
		return loop-value

function contains(os: objects, o : object) :: boolean:
	loop {_os::*}:
		loop-value is {_o}
		return true
	return false